"""Agregando campo ciudad a la tabla propiedades

Revision ID: ed2e00089d9e
Revises: fd287b6a7031
Create Date: 2025-02-11 00:23:15.676600

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'ed2e00089d9e'
down_revision = 'fd287b6a7031'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('ciudades', schema=None) as batch_op:
        batch_op.alter_column('nombre',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('region_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
        batch_op.drop_constraint('ciudades_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'regiones', ['region_id'], ['id'])

    with op.batch_alter_table('comunas', schema=None) as batch_op:
        batch_op.alter_column('nombre',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('ciudad_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
        batch_op.drop_constraint('comunas_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'ciudades', ['ciudad_id'], ['id'])

    with op.batch_alter_table('propiedades', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ciudad', sa.String(length=100), nullable=False))

    with op.batch_alter_table('regiones', schema=None) as batch_op:
        batch_op.alter_column('nombre',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('regiones', schema=None) as batch_op:
        batch_op.alter_column('nombre',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)

    with op.batch_alter_table('propiedades', schema=None) as batch_op:
        batch_op.drop_column('ciudad')

    with op.batch_alter_table('comunas', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('comunas_ibfk_1', 'ciudades', ['ciudad_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('ciudad_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
        batch_op.alter_column('nombre',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)

    with op.batch_alter_table('ciudades', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('ciudades_ibfk_1', 'regiones', ['region_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('region_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
        batch_op.alter_column('nombre',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=False)

    # ### end Alembic commands ###
